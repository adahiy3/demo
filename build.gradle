plugins {
    id 'org.springframework.boot' version '2.2.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'war'
}

group = 'com.example.springboot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
   // runtimeOnly 'com.h2database:h2'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    runtime group: 'mysql', name: 'mysql-connector-java'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
   // compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    //providedCompile group: 'org.hibernate', name: 'hibernate-jpamodelgen', version: '5.4.10.Final'
    compileOnly 'org.hibernate:hibernate-jpamodelgen'
    annotationProcessor('org.hibernate:hibernate-jpamodelgen')



}

test {
    useJUnitPlatform()
}

sourceSets.configureEach { sourceSet ->
    tasks.named(sourceSet.compileJavaTaskName).configure {
        options.annotationProcessorGeneratedSourcesDirectory = file("build/generated/sources/java")
    }
}

bootRun {
//        addResources = true // We can set it to true if we would like to reload src/main/resources
    jvmArgs = [
            "-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5009",
    ]
}
